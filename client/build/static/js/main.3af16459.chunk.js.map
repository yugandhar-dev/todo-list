{"version":3,"sources":["components/Header.js","context/TaskReducer.js","context/GlobalState.js","components/Form.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskReducer","state","action","type","index","tasks","findIndex","task","_id","payload","filter","option","error","initialState","GlobalContext","createContext","GlobalProvider","children","addTask","a","config","headers","axios","post","res","dispatch","data","response","deleteTask","id","delete","completeTask","patch","getTasks","get","useReducer","Provider","value","Form","useState","input","setInput","useContext","useEffect","onSubmit","e","preventDefault","Math","floor","random","name","isCompleted","onChange","target","onClick","Task","divClass","setdivClass","TaskList","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3af16459.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>To-Do List app by Yugandhar</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const TaskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"COMPLETE_TASK\":\r\n      const index = state.tasks.findIndex(\r\n        (task) => task._id === action.payload._id\r\n      );\r\n\r\n      state.tasks[index] = action.payload;\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks,\r\n      };\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => task._id !== action.payload),\r\n      };\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload],\r\n      };\r\n    case \"GET_TASKS\":\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        option: action.option,\r\n      };\r\n    case \"TASK_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport { TaskReducer } from \"./TaskReducer\";\r\nimport axios from \"axios\";\r\n\r\n// Initial State\r\nconst initialState = {\r\n  tasks: [],\r\n  option: \"all\",\r\n  error: null,\r\n};\r\n\r\n// GlobalContext\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// GlobalContext Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  // ACTIONS\r\n\r\n  const addTask = async (task) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tasks\", task, config);\r\n\r\n      dispatch({\r\n        type: \"ADD_TASK\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TASK_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/tasks/${id}`);\r\n      dispatch({\r\n        type: \"DELETE_TASK\",\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TASK_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const completeTask = async (id) => {\r\n    try {\r\n      const task = await axios.patch(`/api/v1/tasks/${id}`);\r\n      dispatch({\r\n        type: \"COMPLETE_TASK\",\r\n        payload: task,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TASK_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTasks = async (option) => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tasks\");\r\n\r\n      dispatch({\r\n        type: \"GET_TASKS\",\r\n        payload: res.data.data,\r\n        option: option,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TASK_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        tasks: state.tasks,\r\n        addTask,\r\n        deleteTask,\r\n        completeTask,\r\n        getTasks,\r\n        option: state.option,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Form = () => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const { addTask, getTasks } = useContext(GlobalContext);\r\n\r\n  const addCurrentTask = (e) => {\r\n    e.preventDefault();\r\n    addTask({\r\n      id: Math.floor(Math.random(1) * 100000),\r\n      name: input,\r\n      isCompleted: false,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks(\"all\");\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={addCurrentTask}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n      <button className=\"todo-button\">\r\n        <i className=\"far fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <div className=\"select\">\r\n        <select\r\n          name=\"todos\"\r\n          className=\"todo-select\"\r\n          onClick={(e) => getTasks(e.target.value)}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { completeTask, deleteTask } = useContext(GlobalContext);\r\n  const [divClass, setdivClass] = useState(task.isCompleted);\r\n\r\n  const changeClass = () => {\r\n    setdivClass(!divClass);\r\n    completeTask(task._id);\r\n  };\r\n  return (\r\n    <div className={divClass ? \"todo text-line\" : \"todo\"}>\r\n      <li className=\"todo-item\">{task.name}</li>\r\n      <button className=\"complete-btn\" onClick={changeClass}>\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={() => deleteTask(task._id)}>\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  let { tasks, option } = useContext(GlobalContext);\r\n\r\n  if (option === \"completed\")\r\n    tasks = tasks.filter((task) => task.isCompleted === true);\r\n  else if (option === \"uncompleted\")\r\n    tasks = tasks.filter((task) => task.isCompleted === false);\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {tasks.map((task) => (\r\n          <Task key={task._id} task={task} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport TaskList from \"./components/TaskList\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Header />\n        <Form />\n        <TaskList />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}